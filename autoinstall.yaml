#cloud-config
autoinstall:
  version: 1
  
  # ====================================================================
  # CONFIGURAÇÃO DE ARMAZENAMENTO
  # ====================================================================
  storage:
    wipe: all
    layout:
      name: lvm
      match: 
        path: /dev/nvme0n1
      password: Senhafoda123@ 

  # ====================================================================
  # CONFIGURAÇÕES DE SISTEMA (Identidade e Localização)
  # ====================================================================
  identity:
    # Usuário: danielavita (Conforme definido nos comandos)
    hostname: notebook-ubuntu
    username: danielavita
    # Senha criptografada
    password: "$6$EAyehhfqepzaGX78$k4Qceki0nxJKS2.ZxcWyWjn7db3p7/0Qu.S6pr32pIqVpzfFmwnOj/.XKgY6x3ADG077lE.DoNwMpXZ2aXr3q." 
    
  locale: pt_BR
  timezone: America/Sao_Paulo
  
  keyboard:
    layout: br

  # ====================================================================
  # INSTALAÇÃO DECLARATIVA DE APLICATIVOS (APT e SNAP)
  # ====================================================================
  packages:
    # Pacotes APT essenciais (Docker, Git, utilitários)
    - docker.io
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - gimp
    - git
    - wget

  snaps:
    # Aplicações instaladas via Snap Store
    - name: spotify
      channel: stable
      classic: false
    - name: postman
      channel: stable
      classic: false
    - name: slack
      channel: stable
      classic: false
    - name: code # VS Code
      channel: stable
      classic: true
    - name: dbeaver-ce
      channel: stable
      classic: false
      
  # Configurações adicionais
  codecs:
    install: true
  drivers:
    install: true
  updates: all
  shutdown: reboot

  # ====================================================================
  # COMANDOS DE PÓS-INSTALAÇÃO (Configurações de Usuário e Extensões)
  # ====================================================================
  late-commands:
    # 1. Update/Upgrade inicial (após a instalação base e dos snaps)
    - curtin in-target -- apt update
    - curtin in-target -- apt upgrade -y
    
    # 2. Configuração do Docker (Adiciona danielavita ao grupo)
    - curtin in-target -- echo "[INFO] Configurando Docker para danielavita..."
    # CORREÇÃO: Usamos um bloco sh -c com sleep para dar tempo ao sistema
    # de finalizar a criação do usuário 'danielavita' antes de executar 'usermod'.
    - |
      curtin in-target -- sh -c '
        echo "Aguardando 5 segundos para garantir que o usuário danielavita esteja pronto..."
        sleep 5 
        groupadd docker || true
        usermod -aG docker danielavita
        echo "Usuário danielavita adicionado ao grupo docker."
      '

    # 3. NVM (Node Version Manager) e Node.js 18
    - curtin in-target -- echo "[INFO] Instalando NVM e Node.js 18 para danielavita..."
    - |
      curtin in-target -- su - danielavita -c '
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        export NVM_DIR="/home/danielavita/.nvm"
        # Tenta carregar o NVM no ambiente de subshell e instala o Node 18
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
        nvm install 18
        nvm use 18
      '
      
    # 4. .NET SDK 6.0 and 8.0 (Instalação no ambiente do usuário)
    - curtin in-target -- echo "[INFO] Instalando .NET SDKs (6.0 e 8.0) para danielavita..."
    - curtin in-target -- DOTNET_INSTALLER_PATH="/home/danielavita/dotnet-install.sh"
    - curtin in-target -- wget https://dot.net/v1/dotnet-install.sh -O "$DOTNET_INSTALLER_PATH"
    - curtin in-target -- chmod +x "$DOTNET_INSTALLER_PATH"
    - curtin in-target -- su - danielavita -c '"$DOTNET_INSTALLER_PATH" --channel 6.0'
    - curtin in-target -- su - danielavita -c '"$DOTNET_INSTALLER_PATH" --channel 8.0'
    - curtin in-target -- rm "$DOTNET_INSTALLER_PATH"

    # 5. Instalação de Extensões do VS Code (A snap 'code' deve estar disponível)
    - curtin in-target -- echo "[INFO] Instalando extensões do VS Code (executando como danielavita)..."
    - |
      curtin in-target -- su - danielavita -c '
        if command -v code &> /dev/null; then
            EXTENSIONS=(
                ms-dotnettools.vscode-dotnet-runtime
                ms-dotnettools.csharp
                Angular.ng-template
                johnpapa.angular2
                fernandoescolar.vscode-solution-explorer
                esbenp.prettier-vscode
                ms-dotnettools.vscodeintellicode-csharp
                dbaeumer.vscode-eslint
                rangav.vscode-thunder-client
            )
            for EXT in "${EXTENSÕES[@]}"; do
                code --install-extension "$EXT" --force
            done
        fi
      '
      
  power-state:
    delay: 5
    mode: reboot
