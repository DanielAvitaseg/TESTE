#cloud-config
autoinstall:
    version: 1
    identity:
        realname: 'Daniel Avita'
        hostname: ubuntu-desktop
        username: danielavita
        password: '$y$j9T$uhkxlm8nUQaNu.6rl4k2d.$DIldpYy96OHg8lFjfXfc671BZcGWkPOmaDONGAhGSg3' # Hash de senha do usuário
    locale: pt_BR.utf8
    keyboard:
        layout: br
    timezone: "America/Sao_Paulo"
    
    # -------------------------------------------------------------
    # CONFIGURAÇÃO CORRIGIDA E SIMPLIFICADA DE STORAGE
    # -------------------------------------------------------------
    storage:
        config:
            # 1. Disco Principal (NVMe0n1)
            - id: disk-nvme
              type: disk
              name: nvme0n1 
              ptable: gpt
              wipe: superblock-recursive
              
            # 2. Partição EFI (512 MB)
            - id: partition-efi
              type: partition
              disk: disk-nvme
              size: 536870912
              
            # 3. Partição /boot (1 GB - Não Criptografada)
            - id: partition-boot
              type: partition
              disk: disk-nvme
              size: 1073741824
              
            # 4. Partição LUKS (Restante do disco)
            - id: partition-luks
              type: partition
              disk: disk-nvme
              size: 0
              
            # 5. Camada de Criptografia LUKS
            - id: crypt-luks
              type: encrypt
              volume: partition-luks
              # Use um HASH SHA-512 VÁLIDO (Ex: gerado por 'openssl passwd -6')
              password: '$6$dEsPnw6B0uPMsJtg$R8DQ9KoMZIR5/RW690CIyXcx/qQWQPBu1Ov0u9ctiWvibXbQB4vgPDbMDpPw3mNx08HNhL9Or3F9RL/rxiQJK0'
              
            # 6. Volume Group (VG) LVM dentro do contêiner LUKS
            - id: vg-system
              type: lvm_volgroup
              name: vg-system
              volumes:
                - crypt-luks
                
            # 7. Logical Volume (LV) para / (Root)
            - id: lv-root
              type: lvm_partition
              volgroup: vg-system
              size: 90%
              name: lv-root
              
            # 8. Logical Volume (LV) para swap
            - id: lv-swap
              type: lvm_partition
              volgroup: vg-system
              size: 0
              name: lv-swap
              
            # 9. Formatação e Montagem
            - id: format-efi
              type: format
              volume: partition-efi
              fstype: vfat
            - id: mount-efi
              type: mount
              volume: format-efi
              path: /boot/efi
              
            - id: format-boot
              type: format
              volume: partition-boot
              fstype: ext4
            - id: mount-boot
              type: mount
              volume: format-boot
              path: /boot
              
            - id: format-root
              type: format
              volume: lv-root
              fstype: ext4
            - id: mount-root
              type: mount
              volume: format-root
              path: /
              
            - id: format-swap
              type: format
              volume: lv-swap
              fstype: swap
            - id: mount-swap
              type: mount
              volume: format-swap
              path: none
              
    # --- Softwares e Comandos (Mantidos) ---
    packages:
        - libreoffice
        - gimp
        - git
        - wget
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
    
    snaps:
        - name: spotify
          channel: stable
          classic: false
        - name: slack
          channel: stable
          classic: false
    
    codecs:
        install: true
    drivers:
        install: true
    updates: all
    shutdown: reboot
    
    late-commands:
        # --- Instalação de Programas (Executado como root) ---
        - |
          echo "--- 1. INICIANDO INSTALAÇÕES DE SISTEMA (ROOT) ---"
          
          # DBeaver, Docker, VS Code, Repositórios, etc.
          echo "Configurando repositórios e chaves..."
          echo "deb [signed-by=/usr/share/keyrings/dbeaver.gpg] https://dbeaver.io/debs/dbeaver-ce /" | tee /etc/apt/sources.list.d/dbeaver.list
          wget -qO - https://dbeaver.io/debs/dbeaver.gpg.key | gpg --dearmor | tee /usr/share/keyrings/dbeaver.gpg > /dev/null
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor | tee /usr/share/keyrings/docker.gpg > /dev/null
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /usr/share/keyrings/microsoft.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" | tee /etc/apt/sources.list.d/vscode.list
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          
          # Update e Instalação (Agrupada)
          echo "Executando apt update e instalações de pacotes externos..."
          apt-get update
          apt-get install -y dbeaver-ce docker-ce powershell code

          # Postman (Instalação Global)
          echo "Instalando Postman Globalmente..."
          wget https://dl.pstmn.io/download/latest/linux64 -O /tmp/postman.tar.gz
          tar -xzf /tmp/postman.tar.gz -C /opt
          ln -sf /opt/Postman/Postman /usr/bin/postman
          rm /tmp/postman.tar.gz
          cat << EOF > /usr/share/applications/postman.desktop
          [Desktop Entry]
          Type=Application
          Name=Postman
          Icon=/opt/Postman/app/resources/app/assets/icon.png
          Exec="/opt/Postman/Postman"
          Comment=Postman Desktop App
          Categories=Development;Code;
          EOF
          
          # Configurações de Permissão (Root)
          echo "Configurando grupos de permissão e serviços..."
          groupadd docker || true 
          usermod -aG docker danielavita
          systemctl enable docker
          
          # 2. INSTALAÇÃO DE PROGRAMAS DE USUÁRIO (NVM e .NET Core)
          echo "--- 2. INICIANDO INSTALAÇÕES DE USUÁRIO (DANIELAVITA) ---"
          su - danielavita -c '
            echo "Iniciando instalação do NVM..."
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash
            
            echo "Iniciando instalação do .NET Core..."
            wget https://dot.net/v1/dotnet-install.sh -O /tmp/dotnet-install.sh
            chmod +x /tmp/dotnet-install.sh
            /tmp/dotnet-install.sh --channel 6.0
            
            echo "Configurando NuGet..."
            /home/danielavita/.dotnet/dotnet nuget add source https://gitlab.com/api/v4/projects/26749643/packages/nuget/index.json --name Gitlab --username gitlab+deploy-token-982472 --password h4V8PmDAVBzuHNAvsjAz --store-password-in-clear-text
          '
          
          # Link Simbólico Global para .NET (Root)
          echo "Criando link simbólico para dotnet..."
          ln -s /home/danielavita/.dotnet/dotnet /usr/bin/dotnet

          echo "--- INSTALAÇÃO AUTOMÁTICA CONCLUÍDA! ---"
