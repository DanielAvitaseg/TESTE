#cloud-config
autoinstall:
  version: 1
  
  # ====================================================================
  # CONFIGURAÇÃO DE ARMAZENAMENTO
  # ====================================================================
  storage:
    wipe: all
    layout:
      name: lvm
      match: 
        path: /dev/nvme0n1
      password: Senhafoda123@ 

  # ====================================================================
  # CONFIGURAÇÕES DE SISTEMA (Identidade e Localização)
  # ====================================================================
  identity:
    # Usuário: danielavita (Conforme definido nos comandos)
    hostname: notebook-ubuntu
    username: danielavita
    # Senha criptografada
    password: "$6$EAyehhfqepzaGX78$k4Qceki0nxJKS2.ZxcWyWjn7db3p7/0Qu.S6pr32pIqVpzfFmwnOj/.XKgY6x3ADG077lE.DoNwMpXZ2aXr3q." 
    
  locale: pt_BR
  timezone: America/Sao_Paulo
  
  keyboard:
    layout: br

  # ====================================================================
  # INSTALAÇÃO DECLARATIVA DE APLICATIVOS (APT e SNAP)
  # ====================================================================
  packages:
    # Pacotes APT essenciais (Docker, Git, utilitários)
    - docker.io
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - gimp
    - git
    - wget

  snaps:
    # Aplicações instaladas via Snap Store
    - name: spotify
      channel: stable
      classic: false
    - name: postman
      channel: stable
      classic: false
    - name: slack
      channel: stable
      classic: false
    - name: code # VS Code
      channel: stable
      classic: true
    - name: dbeaver-ce
      channel: stable
      classic: false
      
  # Configurações adicionais
  codecs:
    install: true
  drivers:
    install: true
  updates: all
  shutdown: reboot

  # ====================================================================
  # COMANDOS DE PÓS-INSTALAÇÃO (Configurações de Usuário e Extensões)
  # ====================================================================
  late-commands:
    # 1. Update/Upgrade inicial (após a instalação base e dos snaps)
    - curtin in-target -- apt update
    - curtin in-target -- apt upgrade -y
    
    # 2. Configuração do Docker (VERIFICAÇÃO DE USUÁRIO ROBUSTA - 5 MINUTOS)
    - curtin in-target -- echo "[INFO] Configurando Docker para danielavita (Verificação de Usuário - Máx. 5 minutos)..."
    - |
      curtin in-target -- sh -c '
        echo "Iniciando verificação do usuário danielavita. Máximo de 5 minutos (300 segundos) de espera."
        MAX_ATTEMPTS=60  # 60 tentativas * 5 segundos = 300 segundos (5 minutos)
        for i in $(seq 1 $MAX_ATTEMPTS); do
          # Verifica se o usuário danielavita existe.
          if getent passwd danielavita > /dev/null; then
            echo "Usuário danielavita encontrado na tentativa $i. Prosseguindo com o Docker."
            groupadd docker || true
            usermod -aG docker danielavita
            echo "Usuário danielavita adicionado ao grupo docker."
            exit 0
          fi
          echo "Usuário danielavita não encontrado. Tentativa $i/$MAX_ATTEMPTS. Aguardando 5 segundos..."
          sleep 5
        done
        echo "Erro CRÍTICO: O usuário danielavita não foi encontrado após 5 minutos. A configuração do Docker falhou."
        exit 1
      '

    # 3. INSTALAÇÃO CONSOLIDADA (NVM, Node.js 18, .NET 6.0/8.0 e Extensões VS Code)
    # Este bloco utiliza o 'runuser' que agora deve ter um usuário danielavita existente.
    - curtin in-target -- echo "[INFO] Iniciando instalação consolidada de NVM, Node.js, .NET e Extensões VS Code (como danielavita)..."
    - |
      curtin in-target -- runuser -l danielavita -c '
        # --- NVM (Node Version Manager) ---
        echo "Instalando NVM..."
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        
        export NVM_DIR="/home/danielavita/.nvm"
        # Garante que o ambiente NVM seja carregado para comandos subsequentes.
        . "$NVM_DIR/nvm.sh" 2>/dev/null || . "$NVM_DIR/bash_completion" 2>/dev/null

        echo "Instalando Node.js 18..."
        nvm install 18
        nvm use 18
        
        # --- .NET SDKs 6.0 e 8.0 ---
        echo "Instalando .NET SDKs (6.0 e 8.0)..."
        DOTNET_INSTALLER_PATH="/home/danielavita/dotnet-install.sh"
        wget https://dot.net/v1/dotnet-install.sh -O "$DOTNET_INSTALLER_PATH"
        chmod +x "$DOTNET_INSTALLER_PATH"
        
        "$DOTNET_INSTALLER_PATH" --channel 6.0
        "$DOTNET_INSTALLER_PATH" --channel 8.0
        rm "$DOTNET_INSTALLER_PATH"
        
        # --- Extensões do VS Code ---
        echo "Instalando extensões do VS Code..."
        if command -v code &> /dev/null; then
            EXTENSIONS=(
                ms-dotnettools.vscode-dotnet-runtime
                ms-dotnettools.csharp
                Angular.ng-template
                johnpapa.angular2
                fernandoescolar.vscode-solution-explorer
                esbenp.prettier-vscode
                ms-dotnettools.vscodeintellicode-csharp
                dbaeumer.vscode-eslint
                rangav.vscode-thunder-client
            )
            for EXT in "${EXTENSIONS[@]}"; do
                code --install-extension "$EXT" --force
            done
        else
            echo "Aviso: VS Code (snap code) não está disponível para instalar extensões."
        fi
        
        echo "Instalação consolidada concluída."
      '
      
  power-state:
    delay: 5
    mode: reboot
