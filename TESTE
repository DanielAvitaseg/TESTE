#cloud-config
autoinstall:
  version: 1
  
  # ====================================================================
  # CONFIGURA√á√ÉO DE ARMAZENAMENTO (LUKS/LVM no /dev/nvme0n1)
  # ====================================================================
  storage:
    wipe: all
    layout:
      name: lvm
      match: 
        path: /dev/nvme0n1
      
      # SENHA DE CRIPTOGRAFIA (LUKS)
      password: Senhafoda123@ 

  # ====================================================================
  # CONFIGURA√á√ïES DE SISTEMA E USU√ÅRIO
  # ====================================================================
  identity:
    hostname: notebook-ubuntu
    username: testuser
    # Senha criptografada para 'testuser'
    password: "$6$EAyehhfqepzaGX78$k4Qceki0nxJKS2.ZxcWyWjn7db3p7/0Qu.S6pr32pIqVpzfFmwnOj/.XKgY6x3ADG077lE.DoNwMpXZ2aXr3q." 
    
  locale: pt_BR
  timezone: America/Sao_Paulo
  
  keyboard:
    layout: br
    

  # ====================================================================
  # 1. LATE-COMMANDS (Executado como ROOT, no sistema de destino)
  # Instala pacotes do sistema (apt, tar, ln, etc.)
  # ====================================================================
  late-commands:
    # Garante que o sistema esteja atualizado antes dos scripts longos
    - curtin in-target -- apt update
    - curtin in-target -- apt upgrade -y
    
    # Executa a parte do script que requer privil√©gios de ROOT e instala no SISTEMA
    - |
      curtin in-target -- bash -c <<'EOF'
        echo "üõ†Ô∏è Iniciando a instala√ß√£o de pacotes de sistema (ROOT)..."

        # --- 1. PREPARA√á√ÉO GERAL ---
        sudo apt update -y
        sudo apt install -y apt-transport-https ca-certificates curl software-properties-common wget gpg lsb-release

        # --- 2. INSTALA√á√ÉO DO DBEAVER CE ---
        echo "--- Instalando DBeaver CE ---"
        echo "deb https://dbeaver.io/debs/dbeaver-ce /" | sudo tee /etc/apt/sources.list.d/dbeaver.list > /dev/null
        wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/dbeaver.gpg > /dev/null
        sudo apt update
        sudo apt install -y dbeaver-ce
        echo "‚úÖ DBeaver CE instalado."

        # --- 3. INSTALA√á√ÉO DO DOCKER & DOCKER COMPOSE ---
        echo "--- Instalando Docker ---"
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        VERSION_CODENAME=$(lsb_release -cs)
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $VERSION_CODENAME stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt update
        sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

        DOCKER_COMPOSE_VERSION="1.29.2"
        sudo curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo systemctl enable docker
        
        # O comando abaixo adiciona o grupo docker, mas a atribui√ß√£o do usu√°rio deve ser feita
        # pelo useradd do instalador. Para garantir que o usu√°rio 'testuser' seja adicionado,
        # vamos usar um 'late-command' espec√≠fico:
        sudo groupadd docker || true # Cria o grupo se nao existir
        sudo usermod -aG docker testuser
        echo "‚úÖ Docker instalado."

        # --- 6. INSTALA√á√ÉO DO POSTMAN (Sistema) ---
        echo "--- Instalando Postman ---"
        POSTMAN_URL="https://dl.pstmn.io/download/latest/linux64"
        POSTMAN_TAR="/tmp/postman.tar.gz"

        wget "$POSTMAN_URL" -O "$POSTMAN_TAR"
        sudo tar -xzf "$POSTMAN_TAR" -C /opt
        sudo ln -sf /opt/Postman/Postman /usr/bin/postman
        rm "$POSTMAN_TAR"

        # Cria o atalho .desktop
        sudo tee /usr/share/applications/postman.desktop > /dev/null << END_POSTMAN_DESKTOP
[Desktop Entry]
Type=Application
Name=Postman
Icon=/opt/Postman/app/resources/app/assets/icon.png
Exec="/opt/Postman/Postman"
Comment=Postman Desktop App
Categories=Development;Code;
END_POSTMAN_DESKTOP
        echo "‚úÖ Postman instalado."

        # --- 7. INSTALA√á√ÉO DO SLACK ---
        echo "--- Instalando Slack ---"
        SLACK_URL="https://downloads.slack-edge.com/desktop-releases/linux/x64/4.46.101/slack-desktop-4.46.101-amd64.deb"
        SLACK_DEB="/tmp/slack.deb"

        wget "$SLACK_URL" -O "$SLACK_DEB"
        sudo apt install "$SLACK_DEB" -y
        rm "$SLACK_DEB"
        echo "‚úÖ Slack instalado."

        # --- 8. INSTALA√á√ÉO DO VS CODE ---
        echo "--- Instalando VS Code ---"
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /tmp/microsoft.gpg
        sudo install -o root -g root -m 644 /tmp/microsoft.gpg /etc/apt/keyrings/
        sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
        rm /tmp/microsoft.gpg
        sudo apt update
        sudo apt install -y code
        echo "‚úÖ VS Code instalado."
        
        echo "üéâ Instala√ß√£o de pacotes de sistema conclu√≠da."
EOF

  # 2. A√ß√£o final
  power-state:
    delay: 5
    mode: reboot

  # ====================================================================
  # 3. USER-DATA (Executado no PRIMEIRO BOOT, como 'testuser')
  # Configura√ß√µes de usu√°rio (NVM, .NET SDK, Extens√µes VS Code)
  # ====================================================================
  user-data:
    runcmd:
      - echo "üõ†Ô∏è Iniciando configura√ß√£o de ambiente do usu√°rio (testuser)..."
      
      # O runcmd √© executado como root. Usamos 'su -' para executar os comandos
      # que dependem do $HOME do usu√°rio e vari√°veis de ambiente (como NVM).
      - su - testuser -c '
        # --- 4. INSTALA√á√ÉO DO .NET SDK 6.0 ---
        echo "--- Instalando .NET SDK 6.0 (usu√°rio) ---"
        DOTNET_INSTALLER_PATH="$HOME/dotnet-install.sh"
        wget https://dot.net/v1/dotnet-install.sh -O "$DOTNET_INSTALLER_PATH"
        chmod +x "$DOTNET_INSTALLER_PATH"
        "$DOTNET_INSTALLER_PATH" --channel 6.0
        rm "$DOTNET_INSTALLER_PATH"
        echo "‚úÖ .NET SDK 6.0 instalado (local)."
        
        # --- 5. INSTALA√á√ÉO DO NVM (Node Version Manager) e Node.js 18 ---
        echo "--- Instalando NVM e Node.js 18 (usu√°rio) ---"
        # 1. Instala o NVM
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

        # 2. Ativa o NVM no shell ATUAL (CRUCIAL para usar nvm imediatamente)
        export NVM_DIR="$HOME/.nvm"
        # O comando abaixo recarrega o script de load do NVM
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 

        # 3. Verifica se o NVM foi carregado e instala o Node.js
        if command -v nvm &> /dev/null; then
            echo "NVM carregado. Instalando Node.js 18..."
            nvm install 18
            nvm use 18
        else
            echo "‚ùå NVM falhou ao carregar. Node.js 18 n√£o instalado."
        fi
        echo "‚úÖ NVM/Node.js 18 instalados."

        # --- 8. INSTALA√á√ÉO DAS EXTENS√ïES DO VS CODE (usu√°rio) ---
        echo "--- Instalando extens√µes do VS Code ---"
        if command -v code &> /dev/null; then
            EXTENSIONS=(
                ms-dotnettools.vscode-dotnet-runtime
                ms-dotnettools.csharp
                Angular.ng-template
                johnpapa.angular2
                fernandoescolar.vscode-solution-explorer
                esbenp.prettier-vscode
                ms-dotnettools.vscodeintellicode-csharp
                dbaeumer.vscode-eslint
                rangav.vscode-thunder-client
            )
            for EXT in "${EXTENSIONS[@]}"; do
                code --install-extension "$EXT" --force
            done
        fi
        echo "‚úÖ Extens√µes VS Code instaladas."
        
        echo "--- üîé FIM DA CONFIGURA√á√ÉO DE USU√ÅRIO ---"
      '
